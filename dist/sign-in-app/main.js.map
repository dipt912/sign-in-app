{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/register/register-page/register-page.component.css","webpack:///./src/app/register/register-page/register-page.component.html","webpack:///./src/app/register/register-page/register-page.component.ts","webpack:///./src/app/register/register-routing.module.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/signin/sigin-routing.module.ts","webpack:///./src/app/signin/signin-page/signin-page.component.css","webpack:///./src/app/signin/signin-page/signin-page.component.html","webpack:///./src/app/signin/signin-page/signin-page.component.ts","webpack:///./src/app/signin/signin.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport * as signin from './signin/signin.module';\nimport * as register from './register/register.module';\n\nconst routes: Routes = [\n  { path: 'signin',\n      loadChildren: () => signin.SigninModule\n   },\n   { path: 'register',\n      loadChildren: () => register.RegisterModule\n   },\n  {\n    path: '',\n    redirectTo: 'signin',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"button {\\n  margin-right: 8px;\\n}\\n\"","module.exports = \"<!-- <mat-toolbar>\\n    <button routerLink=\\\"/signin\\\" mat-raised-button color=\\\"primary\\\">signin</button>\\n    <button mat-button  routerLink=\\\"/register\\\" color=\\\"primary\\\" > Register</button>\\n    <button mat-button routerLink=\\\"\\\" color=\\\"primary\\\" >Home </button>\\n</mat-toolbar> -->\\n\\n<nav class=\\\"navbar navbar-light bg-light\\\">\\n    <!-- <button mat-button routerLink=\\\"\\\" color=\\\"primary\\\" >Home </button> -->\\n    <button routerLink=\\\"/signin\\\" mat-raised-button color=\\\"primary\\\">signin</button>\\n    <button mat-button  routerLink=\\\"/register\\\" color=\\\"primary\\\" > Register</button>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninModule } from './signin/signin.module';\nimport { RegisterModule } from './register/register.module';\nimport { MatInputModule, MatToolbarModule, MatIconModule, MatFormFieldModule, MatOptionModule, MatSelectModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SigninModule,\n    RegisterModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatOptionModule,\n    MatSelectModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".register-form {\\n  margin: 20px;\\n}\\n\"","module.exports = \"<form [formGroup]=\\\"registerFrom\\\" (ngSubmit)=\\\"onSubmit(registerFrom)\\\" class =\\\"register-form\\\">\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n       placeholder=\\\"Enter email\\\"\\n       formControlName=\\\"email\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.email.touched && f.email.errors\\\">Email is invalid</small>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passowrd\\\"\\n       placeholder=\\\"Enter password\\\"\\n       formControlName=\\\"password\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.password.touched && f.password.errors\\\">\\n        Password invalid\\n    </small>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"exampleInputEmail1\\\"> Retype Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"retypepassword\\\"\\n       placeholder=\\\"Retype passowrd\\\"\\n       formControlName=\\\"retypepassword\\\">\\n    <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.retypepassword.touched && f.retypepassword.errors\\\"> Password not match</small>\\n  </div>\\n\\n\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"registerFrom.invalid\\\">\\n    Register\\n  </button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  registerFrom: FormGroup;\n\n  constructor(private fb: FormBuilder,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.registerFrom = this.fb.group({\n      email: ['', [ Validators.required , Validators.email] ],\n      password: ['', [Validators.required]],\n      retypepassword: ['', [Validators.required]]\n    }, {\n      validator: this.MustMatch('password', 'retypepassword')\n  });\n  }\n\n  get f() { console.log(this.registerFrom.controls); return this.registerFrom.controls; }\n\n  onSubmit(form: FormGroup) {\n    console.log('submit', form);\n    this.router.navigate(['']);\n  }\n\n  MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    };\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPageComponent } from './register-page/register-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { MatFormFieldModule, MatOptionModule, MatSelectModule, MatInputModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatOptionModule,\n    MatSelectModule,\n  ],\n  declarations: [RegisterPageComponent]\n})\nexport class RegisterModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninPageComponent } from './signin-page/signin-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigninPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignoutingModule { }\n","module.exports = \".signin-form {\\n  margin: 20px;\\n}\\n\"","module.exports = \"<form [formGroup]=\\\"signIn\\\" (ngSubmit)=\\\"onSubmit(signIn)\\\" class =\\\"signin-form\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\"\\n         placeholder=\\\"Enter email\\\"\\n         formControlName=\\\"email\\\">\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.email.touched && f.email.errors\\\">Email is invalid</small>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputEmail1\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passowrd\\\"\\n         placeholder=\\\"Enter password\\\"\\n         formControlName=\\\"password\\\">\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.password.touched && f.password.errors\\\">\\n          Password invalid\\n      </small>\\n    </div>\\n\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"signIn.invalid\\\">\\n      Sign In\\n    </button>\\n  </form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signin-page',\n  templateUrl: './signin-page.component.html',\n  styleUrls: ['./signin-page.component.css']\n})\nexport class SigninPageComponent implements OnInit {\n  signIn: FormGroup;\n\n  constructor( private fb: FormBuilder,\n               private router: Router ) { }\n\n  ngOnInit() {\n\n    this.signIn = this.fb.group( {\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  get f() { console.log(this.signIn.controls); return this.signIn.controls; }\n\n  onSubmit(form: FormGroup) {\n    this.router.navigate(['']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SigninPageComponent } from './signin-page/signin-page.component';\nimport { SignoutingModule } from './sigin-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SignoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SigninPageComponent]\n})\nexport class SigninModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}