{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/helpers/auth.guard.ts","webpack:///./src/app/home/create-task/create-task.component.css","webpack:///./src/app/home/create-task/create-task.component.html","webpack:///./src/app/home/create-task/create-task.component.ts","webpack:///./src/app/home/home-routing.modules.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/homepage/homepage.component.css","webpack:///./src/app/home/homepage/homepage.component.html","webpack:///./src/app/home/homepage/homepage.component.ts","webpack:///./src/app/register/register-page/register-page.component.css","webpack:///./src/app/register/register-page/register-page.component.html","webpack:///./src/app/register/register-page/register-page.component.ts","webpack:///./src/app/register/register-routing.module.ts","webpack:///./src/app/register/register.module.ts","webpack:///./src/app/services/authorization/auth.service.ts","webpack:///./src/app/signin/sigin-routing.module.ts","webpack:///./src/app/signin/signin-page/signin-page.component.css","webpack:///./src/app/signin/signin-page/signin-page.component.html","webpack:///./src/app/signin/signin-page/signin-page.component.ts","webpack:///./src/app/signin/signin.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SigninModule} from './signin/signin.module';\nimport {  RegisterModule } from './register/register.module';\nimport { HomeModule } from './home/home.module';\nimport { AuthGuard } from './helpers/auth.guard';\n\nexport function loadSignInPageModule() {\n  return SigninModule;\n}\n\nexport function RegisterpageModule() {\n  return RegisterModule;\n}\nexport function HomepageModuleLoading() {\n  return  HomeModule;\n}\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    loadChildren: HomepageModuleLoading,\n    canActivate : [AuthGuard]\n  },\n  { path: 'signin',\n      loadChildren: loadSignInPageModule\n   },\n   { path: 'register',\n      loadChildren: RegisterpageModule\n   },\n  {\n    path: '',\n    redirectTo: 'signin',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"button {\\n  margin-right: 8px;\\n}\\n\\n.title {\\n  font-weight: 400;\\n  color: midnightblue\\n}\\n\"","module.exports = \"\\n<nav class=\\\"navbar navbar-light bg-light title row justify-content-center align-items-center\\\">\\n    <B routerLink=\\\"/home\\\" > TaskOrganizer</B>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninModule } from './signin/signin.module';\nimport { RegisterModule } from './register/register.module';\nimport { MatInputModule, MatToolbarModule, MatIconModule, MatFormFieldModule, MatOptionModule, MatSelectModule } from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeModule } from './home/home.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SigninModule,\n    RegisterModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatOptionModule,\n    MatSelectModule,\n    HttpClientModule,\n    HomeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthService } from '../services/authorization/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['signin']);\n        return false;\n    }\n}\n","module.exports = \".aligin-vertical {\\n    min-height: 100%;  \\n    min-height: 100vh;\\n  \\n    display: -webkit-box;\\n  \\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n  \\n  }\\n  .container-title {\\n    color:rgb(11, 11, 14);\\n    font-weight: 500;\\n    font-size: 20px;\\n  }\"","module.exports = \"<h1> Create Task</h1>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit {\n  createForm: FormGroup;\n  constructor( private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.createForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.createForm.controls; }\n\n  onSubmit(f: FormGroup) {\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { CreateTaskComponent } from './create-task/create-task.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomepageComponent\n  },\n  {\n      path: 'create',\n      component: CreateTaskComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { HomeRoutingModule } from './home-routing.modules';\nimport { CreateTaskComponent } from './create-task/create-task.component';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n  ],\n  declarations: [HomepageComponent, CreateTaskComponent]\n})\nexport class HomeModule { }\n","module.exports = \".aligin-vertical {\\n    min-height: 100%;  \\n    min-height: 100vh;\\n  \\n    display: -webkit-box;\\n  \\n    display: flex;\\n    -webkit-box-align: center;\\n            align-items: center;\\n  \\n  }\\n  .container-title {\\n    color:rgb(11, 11, 14);\\n    font-weight: 500;\\n    font-size: 20px;\\n  }\"","module.exports = \"<div class=\\\"row justify-content-center align-items-center aligin-vertical\\\">\\n  <div class=\\\"col col-md-10 col-md-offset-2\\\">\\n    <!-- <div class=\\\"jumbotron\\\"> -->\\n        <div class=\\\"row justify-content-center container-title\\\"> Welcome to Task Organizer </div>\\n         <div>\\n           <div class=\\\"row justify-content-center\\\"> You can crete task and organize </div>\\n           <div class=\\\"mt-2 row justify-content-center\\\">\\n              <span> Do you want new task? </span>\\n              <span>\\n                <a routerLink=\\\"/create\\\" color=\\\"primary\\\"> Create Task</a>\\n              </span>\\n            </div>\\n          \\n         <!-- </div> -->\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".register-form {\\n  margin: 20px;\\n}\\n\\n.aligin-vertical {\\n  min-height: 100%;  \\n  min-height: 100vh;\\n\\n  display: -webkit-box;\\n\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n\\n}\\n\\n.container-title {\\n  color:rgb(11, 11, 14);\\n  font-weight: 500;\\n  font-size: 20px;\\n}\"","module.exports = \"<div class=\\\"row justify-content-center align-items-center aligin-vertical\\\">\\n  <div class=\\\"col col-md-3 col-md-offset-3\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <div class=\\\"row justify-content-center container-title\\\"> Register </div>\\n      <form [formGroup]=\\\"registerFrom\\\" (ngSubmit)=\\\"onSubmit(registerFrom)\\\" class=\\\"register-form\\\">\\n\\n          <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter name\\\" formControlName=\\\"name\\\">\\n              <small id=\\\"nameHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.name.touched && f.name.errors\\\">Name is invalid</small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"email\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.email.touched && f.email.errors\\\">Email is invalid</small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passowrd\\\" placeholder=\\\"Enter password\\\" formControlName=\\\"password\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.password.touched && f.password.errors\\\">\\n            Password invalid\\n          </small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"retypepassword\\\" placeholder=\\\"Retype passowrd\\\" formControlName=\\\"retypepassword\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.retypepassword.touched && f.retypepassword.errors\\\"> Password not match</small>\\n        </div>\\n\\n\\n        <div class=\\\"row justify-content-center\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"registerFrom.invalid\\\">\\n            Register\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n          </button>\\n        </div>\\n\\n        <div class=\\\"mt-2\\\">\\n          <span>Are you a existing User? </span>\\n          <span>\\n            <a routerLink=\\\"/signin\\\" color=\\\"primary\\\"> SignIn</a>\\n          </span>\\n        </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/authorization/auth.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  registerFrom: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private authApi: AuthService ) {}\n\n  ngOnInit() {\n    this.registerFrom = this.fb.group({\n      email: ['', [ Validators.required , Validators.email] ],\n      password: ['', [Validators.required]],\n      retypepassword: ['', [Validators.required]],\n      name: ['', [Validators.required]]\n    }, {\n      validator: this.MustMatch('password', 'retypepassword')\n  });\n  }\n\n  get f() { return this.registerFrom.controls; }\n\n  onSubmit(form: FormGroup) {\n    this.loading = true;\n    this.router.navigate(['home']);\n    const user = {\n      name: form.controls.name.value,\n      email: form.controls.email.value,\n      password: form.controls.password.value\n    };\n    this.authApi.register(user).pipe(first()).subscribe(\n      data => {\n      this.loading = false;\n      this.router.navigate(['home']);\n    },\n    error => {\n      console.log(error);\n    });\n\n  }\n\n  MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    };\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPageComponent } from './register-page/register-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegisterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterPageComponent } from './register-page/register-page.component';\nimport { RegisterRoutingModule } from './register-routing.module';\nimport { MatFormFieldModule, MatOptionModule, MatSelectModule, MatInputModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RegisterRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatOptionModule,\n    MatSelectModule,\n  ],\n  declarations: [RegisterPageComponent]\n})\nexport class RegisterModule { }\n","import { Injectable } from '@angular/core';\nimport { User, UserReg, LoginUser } from '../../Models/User';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  isRegister: boolean;\n  currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n\n  constructor(private http: HttpClient) {\n    this.isRegister = false;\n   }\n\n   public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  register(user: UserReg) {\n    return this.http.post(`${environment.backendApi}register` , user ).pipe(map( data  => {\n      if (data) {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(data));\n        this.currentUserSubject.next(data as User);\n    }\n    return user;\n    }));\n  }\n\n  signInUser(loginUser: LoginUser) {\n    return this.http.post(`${environment.backendApi}signin` , loginUser ).pipe(map(user => {\n      if (user) {\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user as User);\n    }\n\n    return user;\n    }));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigninPageComponent } from './signin-page/signin-page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigninPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignoutingModule { }\n","module.exports = \".signin-form {\\n  margin: 20px;\\n}\\n.aligin-vertical {\\n  min-height: 100%;  \\n  min-height: 100vh;\\n\\n  display: -webkit-box;\\n\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n\\n}\\n.container-title {\\n  color:rgb(11, 11, 14);\\n  font-weight: 500;\\n  font-size: 20px;\\n}\"","module.exports = \"<div class=\\\"row justify-content-center align-items-center aligin-vertical\\\">\\n  <div class=\\\"col col-md-3 col-md-offset-3\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <div class=\\\"row justify-content-center container-title\\\"> Sign In </div>\\n      <form [formGroup]=\\\"signIn\\\" (ngSubmit)=\\\"onSubmit(signIn)\\\" class=\\\"signin-form\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"email\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.email.touched && f.email.errors\\\">Email is invalid</small>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"passowrd\\\" placeholder=\\\"Enter password\\\" formControlName=\\\"password\\\">\\n          <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" *ngIf=\\\"f.password.touched && f.password.errors\\\">\\n            Password invalid\\n          </small>\\n        </div>\\n\\n        <div class=\\\"row justify-content-center\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"signIn.invalid\\\">\\n            Sign In\\n            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n          </button>\\n        </div>\\n        <div class=\\\"mt-2\\\">\\n          <span>Are you a new User? </span>\\n          <span>\\n            <a routerLink=\\\"/register\\\" color=\\\"primary\\\"> Register</a>\\n          </span>\\n        </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/authorization/auth.service';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signin-page',\n  templateUrl: './signin-page.component.html',\n  styleUrls: ['./signin-page.component.css']\n})\nexport class SigninPageComponent implements OnInit {\n  signIn: FormGroup;\n  loading = false;\n\n  constructor( private fb: FormBuilder,\n               private router: Router,\n              private authApi: AuthService ) { }\n\n  ngOnInit() {\n\n    this.signIn = this.fb.group( {\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  get f() { return this.signIn.controls; }\n\n  onSubmit(form: FormGroup) {\n    this.loading = true;\n    const user = {\n      email: form.controls.email.value,\n      password: form.controls.password.value\n    };\n    this.authApi.signInUser(user).pipe(first()).subscribe(\n      data => {\n      this.loading = false;\n      this.router.navigate(['home']);\n    },\n    error => {\n      console.log(error);\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SigninPageComponent } from './signin-page/signin-page.component';\nimport { SignoutingModule } from './sigin-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SignoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [SigninPageComponent]\n})\nexport class SigninModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendApi: 'http://localhost:3000/api/v1/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}